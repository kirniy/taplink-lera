#!/bin/bash

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã PM..."
echo ""
echo ""

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã PM"
echo "======================="
echo ""

errors=0
warnings=0

# Check directory structure
echo "üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫:"
[ -d ".claude" ] && echo "  ‚úÖ –ü–∞–ø–∫–∞ .claude —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" || { echo "  ‚ùå –ü–∞–ø–∫–∞ .claude –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"; ((errors++)); }
[ -d ".claude/prds" ] && echo "  ‚úÖ –ü–∞–ø–∫–∞ PRDs —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" || echo "  ‚ö†Ô∏è –ü–∞–ø–∫–∞ PRDs –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
[ -d ".claude/epics" ] && echo "  ‚úÖ –ü–∞–ø–∫–∞ Epics —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" || echo "  ‚ö†Ô∏è –ü–∞–ø–∫–∞ Epics –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
[ -d ".claude/rules" ] && echo "  ‚úÖ –ü–∞–ø–∫–∞ Rules —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" || echo "  ‚ö†Ô∏è –ü–∞–ø–∫–∞ Rules –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
echo ""

# Check for orphaned files
echo "üóÇÔ∏è –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö:"

# Check epics have epic.md files
for epic_dir in .claude/epics/*/; do
  [ -d "$epic_dir" ] || continue
  if [ ! -f "$epic_dir/epic.md" ]; then
    echo "  ‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç epic.md –≤ $(basename "$epic_dir")"
    ((warnings++))
  fi
done

# Check for tasks without epics
orphaned=$(find .claude -name "[0-9]*.md" -not -path ".claude/epics/*/*" 2>/dev/null | wc -l)
[ $orphaned -gt 0 ] && echo "  ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ $orphaned –æ—Å–∏—Ä–æ—Ç–µ–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –∑–∞–¥–∞—á" && ((warnings++))

# Check for broken references
echo ""
echo "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–æ–∫:"

for task_file in .claude/epics/*/[0-9]*.md; do
  [ -f "$task_file" ] || continue

  deps=$(grep "^depends_on:" "$task_file" | head -1 | sed 's/^depends_on: *\[//' | sed 's/\]//' | sed 's/,/ /g')
  if [ -n "$deps" ] && [ "$deps" != "depends_on:" ]; then
    epic_dir=$(dirname "$task_file")
    for dep in $deps; do
      if [ ! -f "$epic_dir/$dep.md" ]; then
        echo "  ‚ö†Ô∏è –ó–∞–¥–∞—á–∞ $(basename "$task_file" .md) —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É: $dep"
        ((warnings++))
      fi
    done
  fi
done

[ $warnings -eq 0 ] && [ $errors -eq 0 ] && echo "  ‚úÖ –í—Å–µ —Å—Å—ã–ª–∫–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã"

# Check frontmatter
echo ""
echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ frontmatter:"
invalid=0

for file in $(find .claude -name "*.md" -path "*/epics/*" -o -path "*/prds/*" 2>/dev/null); do
  if ! grep -q "^---" "$file"; then
    echo "  ‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç frontmatter: $(basename "$file")"
    ((invalid++))
  fi
done

[ $invalid -eq 0 ] && echo "  ‚úÖ –í–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö –µ—Å—Ç—å frontmatter"

# Summary
echo ""
echo "üìä –°–≤–æ–¥–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:"
echo "  –û—à–∏–±–∫–∏: $errors"
echo "  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $warnings"
echo "  –ù–µ–≤–µ—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã: $invalid"

if [ $errors -eq 0 ] && [ $warnings -eq 0 ] && [ $invalid -eq 0 ]; then
  echo ""
  echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–¥–æ—Ä–æ–≤–∞!"
else
  echo ""
  echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ /pm:clean –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ–±–ª–µ–º"
fi

exit 0
