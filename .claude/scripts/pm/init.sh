#!/bin/bash

echo "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è..."
echo ""
echo ""

echo " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó"
echo "‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë"
echo "‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë"
echo "‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë"
echo " ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù"

echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
echo "‚îÇ Claude Code Project Management  ‚îÇ"
echo "‚îÇ by https://x.com/aroussi        ‚îÇ"
echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
echo "https://github.com/automazeio/ccpm"
echo ""
echo ""

echo "üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã PM Claude Code"
echo "=============================================="
echo ""

# Check for required tools
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

# Check gh CLI
if command -v gh &> /dev/null; then
  echo "  ‚úÖ GitHub CLI (gh) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
  echo "  ‚ùå GitHub CLI (gh) –Ω–µ –Ω–∞–π–¥–µ–Ω"
  echo ""
  echo "  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ gh..."
  if command -v brew &> /dev/null; then
    brew install gh
  elif command -v apt-get &> /dev/null; then
    sudo apt-get update && sudo apt-get install gh
  else
    echo "  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GitHub CLI –≤—Ä—É—á–Ω—É—é: https://cli.github.com/"
    exit 1
  fi
fi

# Check gh auth status
echo ""
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ GitHub..."
if gh auth status &> /dev/null; then
  echo "  ‚úÖ GitHub –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
else
  echo "  ‚ö†Ô∏è GitHub –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
  echo "  Running: gh auth login"
  gh auth login
fi

# Check for gh-sub-issue extension
echo ""
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π gh..."
if gh extension list | grep -q "yahsan2/gh-sub-issue"; then
  echo "  ‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ gh-sub-issue —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
else
  echo "  üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è gh-sub-issue..."
  gh extension install yahsan2/gh-sub-issue
fi

# Create directory structure
echo ""
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..."
mkdir -p .claude/prds
mkdir -p .claude/epics
mkdir -p .claude/rules
mkdir -p .claude/agents
mkdir -p .claude/scripts/pm
echo "  ‚úÖ –ü–∞–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã"

# Copy scripts if in main repo
if [ -d "scripts/pm" ] && [ ! "$(pwd)" = *"/.claude"* ]; then
  echo ""
  echo "üìù –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ PM..."
  cp -r scripts/pm/* .claude/scripts/pm/
  chmod +x .claude/scripts/pm/*.sh
  echo "  ‚úÖ –°–∫—Ä–∏–ø—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –∏ —Å–¥–µ–ª–∞–Ω—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏"
fi

# Check for git
echo ""
echo "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Git..."
if git rev-parse --git-dir > /dev/null 2>&1; then
  echo "  ‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Git –æ–±–Ω–∞—Ä—É–∂–µ–Ω"

  # Check remote
  if git remote -v | grep -q origin; then
    remote_url=$(git remote get-url origin)
    echo "  ‚úÖ –£–¥–∞–ª—ë–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω: $remote_url"
  else
    echo "  ‚ö†Ô∏è –£–¥–∞–ª—ë–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    echo "  Add with: git remote add origin <url>"
  fi
else
  echo "  ‚ö†Ô∏è –ù–µ —è–≤–ª—è–µ—Ç—Å—è git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º"
  echo "  Initialize with: git init"
fi

# Create CLAUDE.md if it doesn't exist
if [ ! -f "CLAUDE.md" ]; then
  echo ""
  echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ CLAUDE.md..."
  cat > CLAUDE.md << 'EOF'
# CLAUDE.md

> Think carefully and implement the most concise solution that changes as little code as possible.

## Project-Specific Instructions

Add your project-specific instructions here.

## Testing

Always run tests before committing:
- `npm test` or equivalent for your stack

## Code Style

Follow existing patterns in the codebase.
EOF
  echo "  ‚úÖ CLAUDE.md —Å–æ–∑–¥–∞–Ω"
fi

# Summary
echo ""
echo "‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "=========================="
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:"
gh --version | head -1
echo "  –†–∞—Å—à–∏—Ä–µ–Ω–∏—è: $(gh extension list | wc -l) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
echo "  –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: $(gh auth status 2>&1 | grep -o 'Logged in to [^ ]*' || echo '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω')"
echo ""
echo "üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "  1. Create your first PRD: /pm:prd-new <feature-name>"
echo "  2. View help: /pm:help"
echo "  3. Check status: /pm:status"
echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md"

exit 0
